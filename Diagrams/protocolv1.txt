
class Protocol {
- skt : Socket
+ sendAll(const void *data, unsigned int sz) : void
+ recvAll( void *data, unsigned int sz) : void
+ sendString(const std::string str) : void
+ recvString() : std::string
+ stop () : void
}


class ClientProtocol{
- sendCreate(std::string scenario, TypeOperator typeOperator, TypeGame typeGame) : void
- sendJoin(uint32_t code, TypeOperator typeOperator) : void
- sendMove(MoveTo moveTo) : void
- sendStopMove() : void
- getCreate() : Snapshot
- getJoin() : Snapshot
- getMove() : Snapshot
- getStopMove() : Snapshot
+ getSnapshot() : Snapshot
+ sendEvent(const EventDTO& eventdto) : void
}


class ServerProtocol {
- getCreate() : EventDTO
- getJoin() : EventDTO
- getMove() : EventDTO
- getStopMove() : EventDTO
- sendCreate(uint32_t code) : void
- sendJoin(uint8_t ok) : void
- sendMove(TypeOperator typeOperator, uint16_t x, uint16_t y) : void
- sendStopMove(TypeOperator typeOperator, uint16_t x, uint16_t y) : void
- sendOperator(TypeOperator typeOperator) : void
- sendPosition(const uint16_t x, const uint16_t y) : void
+ getEvent() : EventDTO
+ sendSnapshot(const Snapshot &snapshot) : void
}

Protocol <|-- ServerProtocol
Protocol <|-- ClientProtocol

class EventDTO {
- str : std::string
- n : uint32_t
+ getEvent() : Event
+ getMoveTo() :  MoveTo
+ getTypeOperator() : TypeOperator
+ getTypeGame() : TypeGame
+ getStr() : std::string
+ getN() : uint32_t
}


class Snapshot {
- code : uint32_t
- ok : uint8_t
- position : std::pair<uint16_t>
+ getEvent() : Event
+ getTypeOperator() : TypeOperator
+ getCode() : uint32_t
+ getOk() : uint8_t
+ getPosition() : std::pair<uint16_t> 
}

note right of Snapshot
agregar todo los datos necesarios 
por el cliente
end note

enum Event {
- event_invalid
- event_create
- event_join
- event_move
- event_stop_move
- event_leave
}

hide Event methods

enum MoveTo {
- move_idle
- move_right
- move_left
- move_up
- move_down
- move_up_right
- move_up_left
- move_down_right
- move_down_left
}

hide MoveTo methods

enum TypeOperator {
- operator_idle
- operator_idf
- operator_p90
- operator_scout
}

hide TypeOperator methods


enum TypeGame {
- game_idle
- game_survival
- game_clear_zone
}

hide TypeGame methods

EventDTO --> Event
EventDTO --> MoveTo
EventDTO --> TypeOperator
EventDTO --> TypeGame

Event <-- Snapshot
TypeOperator <-- Snapshot